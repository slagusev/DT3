
shader {

	StandardUniform = UNIFORM_MODELVIEW "uModelView"
	StandardUniform = UNIFORM_PROJECTION "uProjection"

	StandardAttrib = ATTRIB_POSITION "aPosition"

	shaders {
	    FragmentShaderBlock {
	        Implementation "GLES2,GLSL" {
	            Shader = "
                    #if defined(GL_ES)
                    precision highp float;
                    #else
                    #define lowp
                    #define mediump
                    #define highp
                    #endif

                    void main() {
                        gl_FragColor = vec4(1.0,1.0,1.0,1.0);
                    }
                "
            }
        }
	    
	    VertexShaderBlock {
	        Implementation "GLES2,GLSL" { 
	            Shader = "
	                attribute vec3 aPosition;
            
                    uniform mat4 uModelView;
                    uniform mat4 uProjection;
                        
                    void main() {
                        vec3 position = vec3(uModelView * vec4(aPosition,1.0));
                        gl_Position = uProjection * vec4(position,1.0);
                    }
                "
            }
        }
        
	}

}